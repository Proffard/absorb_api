var search_data = {"index":{"searchIndex":["absorbapi","base","category","certificate","configuration","course","courseenrollment","lessonenrollment","user","all()","all()","all()","api()","authorize()","catalog()","certificates()","certificates()","configure()","courses()","courses_from_collection()","create()","enrollments()","enrollments()","enrollments_from_collection()","find()","find()","find()","find()","find_certificate()","lessons()","lessons_from_collection()","new()","new()","new()","new()","new()","reset()","where()","where()","gemfile","gemfile.lock","license","readme","rakefile","absorb_api.gemspec","setup"],"longSearchIndex":["absorbapi","absorbapi::base","absorbapi::category","absorbapi::certificate","absorbapi::configuration","absorbapi::course","absorbapi::courseenrollment","absorbapi::lessonenrollment","absorbapi::user","absorbapi::category::all()","absorbapi::course::all()","absorbapi::user::all()","absorbapi::base::api()","absorbapi::base::authorize()","absorbapi::user#catalog()","absorbapi::course#certificates()","absorbapi::user#certificates()","absorbapi::configure()","absorbapi::user#courses()","absorbapi::user::courses_from_collection()","absorbapi::user::create()","absorbapi::course#enrollments()","absorbapi::user#enrollments()","absorbapi::course::enrollments_from_collection()","absorbapi::category::find()","absorbapi::certificate::find()","absorbapi::course::find()","absorbapi::user::find()","absorbapi::user#find_certificate()","absorbapi::courseenrollment#lessons()","absorbapi::courseenrollment::lessons_from_collection()","absorbapi::category::new()","absorbapi::course::new()","absorbapi::courseenrollment::new()","absorbapi::lessonenrollment::new()","absorbapi::user::new()","absorbapi::reset()","absorbapi::course::where()","absorbapi::user::where()","","","","","","",""],"info":[["AbsorbApi","","AbsorbApi.html","",""],["AbsorbApi::Base","","AbsorbApi/Base.html","",""],["AbsorbApi::Category","","AbsorbApi/Category.html","",""],["AbsorbApi::Certificate","","AbsorbApi/Certificate.html","",""],["AbsorbApi::Configuration","","AbsorbApi/Configuration.html","",""],["AbsorbApi::Course","","AbsorbApi/Course.html","",""],["AbsorbApi::CourseEnrollment","","AbsorbApi/CourseEnrollment.html","",""],["AbsorbApi::LessonEnrollment","","AbsorbApi/LessonEnrollment.html","",""],["AbsorbApi::User","","AbsorbApi/User.html","",""],["all","AbsorbApi::Category","AbsorbApi/Category.html#method-c-all","()",""],["all","AbsorbApi::Course","AbsorbApi/Course.html#method-c-all","()",""],["all","AbsorbApi::User","AbsorbApi/User.html#method-c-all","()",""],["api","AbsorbApi::Base","AbsorbApi/Base.html#method-c-api","()",""],["authorize","AbsorbApi::Base","AbsorbApi/Base.html#method-c-authorize","()",""],["catalog","AbsorbApi::User","AbsorbApi/User.html#method-i-catalog","()",""],["certificates","AbsorbApi::Course","AbsorbApi/Course.html#method-i-certificates","(include_expired: nil, acquired_date: nil, expiry_date: nil)",""],["certificates","AbsorbApi::User","AbsorbApi/User.html#method-i-certificates","()",""],["configure","AbsorbApi","AbsorbApi.html#method-c-configure","()",""],["courses","AbsorbApi::User","AbsorbApi/User.html#method-i-courses","()",""],["courses_from_collection","AbsorbApi::User","AbsorbApi/User.html#method-c-courses_from_collection","(users)","<p>gets all associated courses given a collection of users all calls are\ncalled in parallel users are chunked …\n"],["create","AbsorbApi::User","AbsorbApi/User.html#method-c-create","(department_id:, first_name:, last_name:, user_name:, email_address:, password:)","<p>department_id, first_name, last_name, user_name, email_address, password\nare required\n"],["enrollments","AbsorbApi::Course","AbsorbApi/Course.html#method-i-enrollments","(status: nil, modified_since: nil)",""],["enrollments","AbsorbApi::User","AbsorbApi/User.html#method-i-enrollments","(params = nil)",""],["enrollments_from_collection","AbsorbApi::Course","AbsorbApi/Course.html#method-c-enrollments_from_collection","(courses)","<p>gets all associated enrollments given a collection of courses all calls are\ncalled in parallel\n"],["find","AbsorbApi::Category","AbsorbApi/Category.html#method-c-find","(id)",""],["find","AbsorbApi::Certificate","AbsorbApi/Certificate.html#method-c-find","(id)",""],["find","AbsorbApi::Course","AbsorbApi/Course.html#method-c-find","(id)",""],["find","AbsorbApi::User","AbsorbApi/User.html#method-c-find","(id)",""],["find_certificate","AbsorbApi::User","AbsorbApi/User.html#method-i-find_certificate","(id)",""],["lessons","AbsorbApi::CourseEnrollment","AbsorbApi/CourseEnrollment.html#method-i-lessons","()",""],["lessons_from_collection","AbsorbApi::CourseEnrollment","AbsorbApi/CourseEnrollment.html#method-c-lessons_from_collection","(course_enrollments, modifiedSince)","<p>gets all associated lessons given a collection of enrollments all calls are\ncalled in parallel enrollments …\n"],["new","AbsorbApi::Category","AbsorbApi/Category.html#method-c-new","(attrs)",""],["new","AbsorbApi::Course","AbsorbApi/Course.html#method-c-new","(attrs)",""],["new","AbsorbApi::CourseEnrollment","AbsorbApi/CourseEnrollment.html#method-c-new","(attrs)",""],["new","AbsorbApi::LessonEnrollment","AbsorbApi/LessonEnrollment.html#method-c-new","(attrs)",""],["new","AbsorbApi::User","AbsorbApi/User.html#method-c-new","(attrs)",""],["reset","AbsorbApi","AbsorbApi.html#method-c-reset","()",""],["where","AbsorbApi::Course","AbsorbApi/Course.html#method-c-where","(modified_since: nil, external_id: nil)","<p>available filters modifiedSince, externalId\n"],["where","AbsorbApi::User","AbsorbApi/User.html#method-c-where","(params)","<p>available filters email, username, modifiedSince, externalId\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Specify your gem&#39;s dependencies in absorb_api.gemspec gemspec\n<p>gem &#39;faraday&#39; …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  absorb_api (0.1.0)</pre>\n<p>GEM\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2016 npezza93\n<p>Permission is hereby granted, free of charge, to any …\n"],["README","","README_md.html","","<p>Absorb LMS API Wrapper\n<p>“Absorb LMS is a powerful, flexible, and visually stunning software\nplatform …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” task :default =&gt; :spec\n"],["absorb_api.gemspec","","absorb_api_gemspec.html","","<p>lib = File.expand_path(&#39;../lib&#39;, __FILE__) $LOAD_PATH.unshift(lib)\nunless $LOAD_PATH.include?(lib) …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"]]}}