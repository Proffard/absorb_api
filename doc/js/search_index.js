var search_data = {"index":{"searchIndex":["absorbapi","base","category","certificate","chapter","collection","configuration","course","courseenrollment","curriculum","department","lesson","lessonenrollment","orm","prerequisite","relations","resource","resourcenotfound","role","routenotfound","sessionschedule","tag","user","validationerror","all()","api()","authorize()","configure()","courses_from_collection()","create()","enrollments_from_collection()","find()","has_many()","has_one()","lessons()","lessons_from_collection()","new()","new()","reset()","where()","gemfile","gemfile.lock","license","readme","rakefile","absorb_api.gemspec","setup"],"longSearchIndex":["absorbapi","absorbapi::base","absorbapi::category","absorbapi::certificate","absorbapi::chapter","absorbapi::collection","absorbapi::configuration","absorbapi::course","absorbapi::courseenrollment","absorbapi::curriculum","absorbapi::department","absorbapi::lesson","absorbapi::lessonenrollment","absorbapi::orm","absorbapi::prerequisite","absorbapi::relations","absorbapi::resource","absorbapi::resourcenotfound","absorbapi::role","absorbapi::routenotfound","absorbapi::sessionschedule","absorbapi::tag","absorbapi::user","absorbapi::validationerror","absorbapi::orm#all()","absorbapi::api()","absorbapi::authorize()","absorbapi::configure()","absorbapi::user::courses_from_collection()","absorbapi::relations#create()","absorbapi::course::enrollments_from_collection()","absorbapi::orm#find()","absorbapi::relations#has_many()","absorbapi::relations#has_one()","absorbapi::courseenrollment#lessons()","absorbapi::courseenrollment::lessons_from_collection()","absorbapi::base::new()","absorbapi::collection::new()","absorbapi::reset()","absorbapi::relations#where()","","","","","","",""],"info":[["AbsorbApi","","AbsorbApi.html","",""],["AbsorbApi::Base","","AbsorbApi/Base.html","",""],["AbsorbApi::Category","","AbsorbApi/Category.html","",""],["AbsorbApi::Certificate","","AbsorbApi/Certificate.html","",""],["AbsorbApi::Chapter","","AbsorbApi/Chapter.html","",""],["AbsorbApi::Collection","","AbsorbApi/Collection.html","",""],["AbsorbApi::Configuration","","AbsorbApi/Configuration.html","",""],["AbsorbApi::Course","","AbsorbApi/Course.html","",""],["AbsorbApi::CourseEnrollment","","AbsorbApi/CourseEnrollment.html","",""],["AbsorbApi::Curriculum","","AbsorbApi/Curriculum.html","",""],["AbsorbApi::Department","","AbsorbApi/Department.html","",""],["AbsorbApi::Lesson","","AbsorbApi/Lesson.html","",""],["AbsorbApi::LessonEnrollment","","AbsorbApi/LessonEnrollment.html","",""],["AbsorbApi::Orm","","AbsorbApi/Orm.html","",""],["AbsorbApi::Prerequisite","","AbsorbApi/Prerequisite.html","",""],["AbsorbApi::Relations","","AbsorbApi/Relations.html","",""],["AbsorbApi::Resource","","AbsorbApi/Resource.html","",""],["AbsorbApi::ResourceNotFound","","AbsorbApi/ResourceNotFound.html","",""],["AbsorbApi::Role","","AbsorbApi/Role.html","",""],["AbsorbApi::RouteNotFound","","AbsorbApi/RouteNotFound.html","",""],["AbsorbApi::SessionSchedule","","AbsorbApi/SessionSchedule.html","",""],["AbsorbApi::Tag","","AbsorbApi/Tag.html","",""],["AbsorbApi::User","","AbsorbApi/User.html","",""],["AbsorbApi::ValidationError","","AbsorbApi/ValidationError.html","",""],["all","AbsorbApi::Orm","AbsorbApi/Orm.html#method-i-all","()",""],["api","AbsorbApi","AbsorbApi.html#method-c-api","()",""],["authorize","AbsorbApi","AbsorbApi.html#method-c-authorize","()",""],["configure","AbsorbApi","AbsorbApi.html#method-c-configure","()",""],["courses_from_collection","AbsorbApi::User","AbsorbApi/User.html#method-c-courses_from_collection","(users)","<p>gets all associated courses given a collection of users all calls are\ncalled in parallel users are chunked …\n"],["create","AbsorbApi::Relations","AbsorbApi/Relations.html#method-i-create","(attributes = [], &block)",""],["enrollments_from_collection","AbsorbApi::Course","AbsorbApi/Course.html#method-c-enrollments_from_collection","(courses, **conditions)","<p>gets all associated enrollments given a collection of courses all calls are\ncalled in parallel\n"],["find","AbsorbApi::Orm","AbsorbApi/Orm.html#method-i-find","(id)",""],["has_many","AbsorbApi::Relations","AbsorbApi/Relations.html#method-i-has_many","(rel_name, klass = nil)",""],["has_one","AbsorbApi::Relations","AbsorbApi/Relations.html#method-i-has_one","(rel_name, klass = nil)",""],["lessons","AbsorbApi::CourseEnrollment","AbsorbApi/CourseEnrollment.html#method-i-lessons","(**conditions)",""],["lessons_from_collection","AbsorbApi::CourseEnrollment","AbsorbApi/CourseEnrollment.html#method-c-lessons_from_collection","(course_enrollments, **filters)","<p>gets all associated lessons given a collection of enrollments all calls are\ncalled in parallel enrollments …\n"],["new","AbsorbApi::Base","AbsorbApi/Base.html#method-c-new","(attributes = [], &block)",""],["new","AbsorbApi::Collection","AbsorbApi/Collection.html#method-c-new","(elements, metadata = {})",""],["reset","AbsorbApi","AbsorbApi.html#method-c-reset","()",""],["where","AbsorbApi::Relations","AbsorbApi/Relations.html#method-i-where","(**conditions)",""],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Specify your gem&#39;s dependencies in absorb_api.gemspec gemspec\n<p>gem &#39;faraday&#39; …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  absorb_api (0.1.6)</pre>\n<p>GEM\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2016 npezza93\n<p>Permission is hereby granted, free of charge, to any …\n"],["README","","README_md.html","","<p>Absorb LMS API Wrapper\n<p>“Absorb LMS is a powerful, flexible, and visually stunning software\nplatform …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” task :default =&gt; :spec\n"],["absorb_api.gemspec","","absorb_api_gemspec.html","","<p>lib = File.expand_path(&#39;../lib&#39;, __FILE__) $LOAD_PATH.unshift(lib)\nunless $LOAD_PATH.include?(lib) …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"]]}}